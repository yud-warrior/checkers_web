version: '3.8'
services:

  backend:
    env_file:
      - backend/.env
    depends_on:
      - db
    build:
      context: ./backend/
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - "127.0.0.1:8000:8000"
    expose:
      - 8000
    networks:
      - app

  db:
    container_name: postgres_container
    image: postgres:15-alpine
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    expose:
      - 5435
    networks:
      - app

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-rodionyudenko@gmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - app
    restart: always

volumes:
  db:
    driver: local
  pgadmin:
    driver: local

networks:
  app:
    driver: bridge



